.. -*- mode: rst -*-

Сортирање (ORDER BY)
--------------------

Често се јавља потреба да податке прикажемо у одређеном редоследу. Потребан
редослед можемо да добијемо додавањем клаузуле ``ORDER BY`` у упит ``SELECT``.
У клаузули ``ORDER BY`` се наводи једна (или више) колона, на основу којих 
се врши сортирање врста резултата.

.. questionnote::

   Приказати списак свих предмета, уређен по разреду у ком се предају.

.. code-block:: sql

   SELECT *
   FROM predmet
   ORDER BY razred;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "naziv", "razred", "fond"
   :align: left

   "1", "Математика", "1", "4"
   "2", "Српски језик", "1", "4"
   "3", "Рачунарство и информатика", "1", "2"
   "6", "Физика", "1", "2"
   "12", "Енглески језик", "1", "2"
   ..., ..., ..., ...

Сортирање се, наравно, лако комбинује са пројекцијом и
селекцијом. Такође, сортирање може да се примени и на типове података
који нису бројеви (на датуме, ниске).
   
.. questionnote::

   Приказати имена, презимена и датуме рођења свих ученика одељења
   првог један, уређене неопадајуће по датуму рођења (од најстаријих
   до најмлађих ђака).

   
.. code-block:: sql

   SELECT ime, prezime, datum_rodjenja
   FROM ucenik
   WHERE razred = 1 AND odeljenje = 1
   ORDER BY datum_rodjenja;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ime", "prezime", "datum_rodjenja"
   :align: left

   "Милица", "Јовановић", "2006-04-03"
   "Огњен", "Стојановић", "2006-04-23"
   "Александра", "Гајин", "2006-04-24"
   "Војин", "Милошевић", "2006-04-30"
   "Ивана", "Пејчев", "2006-05-13"
   ..., ..., ...

Овај упит можемо да прочитамо као 

| **ОДАБЕРИ** име, презиме и датум рођења
| **ИЗ РЕДОВА** табеле ученика
| **КОД КОЈИХ** је разред једнак 1 и одељење једнако 1
| **У РЕДОСЛЕДУ** датума рођења
   
Ако се жели обратан редослед сортирања (нерастући), тада се након
имена колоне може навести ``DESC``. Могуће је навести и ``ASC`` чиме
се наглашава да је редослед неопадајући, међутим, пошто је тај
редослед подразумеван, ово се често изоставља.

.. questionnote::

   Приказати имена, презимена и датуме рођења свих ученика одељења
   првог један, уређене нерастући по датуму рођења (од најмлађих
   до најстаријих ђака).

   
.. code-block:: sql

   SELECT ime, prezime, datum_rodjenja
   FROM ucenik
   WHERE razred = 1 AND odeljenje = 1
   ORDER BY datum_rodjenja DESC;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ime", "prezime", "datum_rodjenja"
   :align: left

   "Теодора", "Вучковић", "2007-02-25"
   "Даница", "Анђелковић", "2007-02-11"
   "Анита", "Урошевић", "2007-02-05"
   "Елена", "Ђурђевић", "2007-01-16"
   "Анђелија", "Богдановић", "2007-01-16"
   ..., ..., ...

   
Ако је у клаузули ``ORDER BY`` наведено више колона, тада се поређење
врши прво по првој колони, ако су вредности у првој колони једнаке,
поређење се врши по другој колони, ако су вредности и у другој колони
једнаке, поређење се врши по трећој колони итд.

.. questionnote::

   Приказати све податке о ученицима у азбучном редоследу презимена и имена.

.. code-block:: sql
   
   SELECT prezime, ime
   FROM ucenik
   ORDER BY prezime ASC, ime ASC;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "prezime", "ime"
   :align: left

   "Алексић", "Магдалена"
   "Анђелковић", "Ана"
   "Анђелковић", "Даница"
   "Анђелковић", "Магдалена"
   "Антић", "Бранко"
   ..., ...

Пошто су у клаузули ``ORDER BY`` наведене две колоне ``prezime``, па
``ime``, сортирање се прво врши по презименима, а ако су презимена
једнака, онда се врши по именима. ``ASC`` означава да се сортирање обе
колоне врши у неопадајућем редоследу (и може да се изостави).
Нагласимо да је за сортирање по азбучном реду јако важно да су у
колонама ``ime`` и ``prezime`` подешене одговарајуће колационе
секвенце.

Вежба
.....

Наредних неколико упита напиши самостално.

.. questionnote::

   Прикажи све податке о предметима првог разреда у нерастућем
   редоследу фонда часова.

   
.. dbpetlja:: db_sortiranje_01
   :dbfile: dnevnik.sql
   :solutionquery: SELECT *
                   FROM predmet
                   WHERE razred = 1
                   ORDER BY fond DESC
   :showresult:

.. questionnote::

   Прикажи све податке о изостанцима тако да су прво наведени
   неоправдани, па нерегулисани, па оправдани, при чему су у свакој
   категорији изостанци поређени по датуму када су направљени, а за
   оне направљене истог датума по часу на ком су направљени.

.. dbpetlja:: db_sortiranje_02
   :dbfile: dnevnik.sql
   :solutionquery: SELECT *
                   FROM izostanak
                   ORDER BY status, datum, cas
   :showresult:
   
