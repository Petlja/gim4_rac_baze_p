Python SQLite API - квиз
========================

.. quizq::

    .. mchoice:: sqlite_priprema
        :answer_a: Потребно је инсталирати одговарајући пакет са Пајтон библиотеком, а затим је укључити у сваки програм.
        :answer_b: Довољно је само да се у првом реду програма import наредбом укључи библиотека sqlite3
        :answer_c: Није потребно ништа радити, функције за рад са базом су део уграђене библиотеке и зато су директно доступне у Пајтон програмима.
        :correct: b

        Шта је потребно урадити да би у Пајтон програмима могли да се извршавају упити над SQLite базама?


.. quizq::

    .. mchoice:: sqlite_api
        :multiple_answers:
        :answer_a: функције за повезивање са СУБП
        :answer_b: функције за постављање упита и прибављање резултата
        :answer_c: функције за проверу исправности податка
        :answer_d: механизам за итерацију кроз резултат упита
        :correct: a,b,d

        Шта све обезбеђује библиотека sqlite3? Означи све тачне одговоре.
            
.. quizq::

    .. mchoice:: sqlite_konekcija
        :answer_a: Само један параметар, име датотеке (по потреби са путањом) у којој се налази база података.
        :answer_b: Путању до фолдера у коме се налази база података, и име датотеке која садржи базу.
        :answer_c: Име датотеке која садржи базу и тип конекције.
        :answer_d: Име датотеке која садржи базу и назив протокола који ће бити коришћен.
        :correct: a

        Шта као параметре прима функција ``sqlite3.connect``?

.. quizq::

    .. mchoice:: sqlite_izvrsavanje_upita_1
        :answer_a: connection (конекција)
        :answer_b: cursor (курсор)
        :answer_c: database (база података)
        :answer_d: query (упит)
        :correct: b

        Како називамо објекат, чијом методом ``execute`` извршавамо SQL упите?

.. quizq::

    .. mchoice:: sqlite_izvrsavanje_upita_2
        :multiple_answers:
        :answer_a: Ако сам упит није параметризован, методу ``execute`` се не прослеђују додатни аргументи.
        :answer_b: Ако је упит параметризован, други аргумент може да буде торка вредности параметара упита.
        :answer_c: Ако је упит параметризован, други аргумент може да буде речник са именима и вредностима параметара упита.
        :answer_d: Ако је упит параметризован, сваки параметар упита може да се проследи као посебан аргумент метода ``execute``.
        :correct: a,b,c

        Методу ``execute`` се увек као први аргумент прослеђује ниска (стринг) која садржи упит.
        
        Шта све могу да буду остали аргументи овог метода? Означи све тачне одговоре.

.. quizq::

    .. mchoice:: sqlite_SQL_injection 
        :answer_a: Уметање листе SQL упита у Пајтон програм.
        :answer_b: Убацивање и памћење SQL скриптова у датотеци која садржи базу података.
        :answer_c: Масовно убацивање података у базу из неког спољног извора (нпр. текстуалне датотеке)
        :answer_d: Безбедносни пропуст.
        :correct: d

        Шта је *SQL injection*?

.. quizq::

    .. mchoice:: sqlite_vise_upita
        :answer_a: Тако што методу ``execute`` проследимо листу торки параметара.
        :answer_b: Тако што користимо метод ``executemany``.
        :answer_c: Није могуће извршити упит више пута у јеној наредби.
        :answer_d: Тако што позовемо метод ``execute`` са опцијом ``fetchall``.
        :correct: b

        Како можемо једном наредбом да више пута извршимо параметризовани упит, сваки пут са другачијим вредностима параметара упита?

.. comment
    
    увек је пожељно експлицитно навести називе и редослед колона које се читају из базе. 
    Тај редослед се после користи и у петљама које обрађују резултате упита, па ако се он
    упари са оним наведеним након кључне речи SELECT, тада нема опасности да скрипт 
    престане да ради ако се структура табела у бази мало промени (нпр. дода се нека нова колона).
    
    Ако нам итерирање кроз редове резултата није довољно, већ желимо да се кроз резултат 
    крећемо слободније, листу торки у којој се чува цео резултат можемо да добијемо 
    коришћењем метода fetchall над курсором над којим је извршен упит. Слично, метод 
    fetchone враћа наредну врсту у резултату претходно извршеног упита.
