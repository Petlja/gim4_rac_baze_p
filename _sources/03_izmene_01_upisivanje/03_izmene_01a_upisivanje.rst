.. -*- mode: rst -*-

Уписивање података
------------------

Унос нових врста у табеле се врши упитима типа ``INSERT``. Њихов
општи облик је следећи:

.. code-block:: sql

   INSERT INTO tabela (kolona_1, ..., kolona_k)
   VALUES (vrednost_1, ..., vrednost_k);

Након назива табеле наведеног иза кључних речи ``INSERT INTO`` наводе
се називи колона, а затим се након кључне речи ``VALUES`` наводе
вредности тих колона. Називи колона могу да се изоставе ако се након
``VALUES`` наведу вредности свих колона и то баш у редоследу колона у
табели (тај редослед је одређен приликом креирања тј. дефинисања
структуре табеле). Када експлицитно наведемо имена колона, не морамо
да обраћамо пажњу на тај редослед и упит остаје коректан и ако се тај
редослед промени. У случају да неке колоне имају постављене
подразумеване вредности или ако се аутоматски увећавају (што је
одређено опцијом ``AUTOINCREMENT``), тада оне могу да се изоставе из
упита ``INSERT``.

Могуће је истовремено унети више врста и тада се користи упит следећег
облика.

.. code-block:: sql

   INSERT INTO tabela (kolona_1, ..., kolona_k)
   VALUES (vrednost_1, ..., vrednost_k),
          (vrednost_1, ..., vrednost_k),
          ...,
          (vrednost_1, ..., vrednost_k);


Приликом извршавања упита ``INSERT`` врши се провера интегритета
података и упис се врши само ако су услови интегритета испуњени. На
пример:

- не дозвољава се унос података погрешног типа,
- не дозвољава се унос који би нарушио јединственост примарног кључа
- не дозвољава се унос који би уместо примарног кључа имао недостајућу вредност,
- не дозвољава се унос који би нарушио услове јединствености који су
  приликом креирања табеле наметнути као додатна ограничења,
- не дозвољава се унос који би уписао недостајућу вредност у колону у којој
  су недостајуће вредности забрањене (``NOT NULL``),
- не дозвољава се унос који би нарушио услов страног кључа (који би у
  колону у којој се налази неки страни кључ уписао вредност која не
  постоји као примарни у повезаној табели),


Прикажимо употребу упита ``INSERT`` на неколико једноставних примера.

.. questionnote::

   Унети у табелу ученика нову ученицу одељења II1. Она се зове Зденка
   Здолшек и рођена је 17. августа 2005. године.

Пошто идентификатор ученика има постављену опцију ``AUTOINCREMENT``,
уписаћемо вредности свих колона осим колоне ``id``.
   
.. code-block:: sql

   INSERT INTO ucenik (ime, prezime, pol, datum_rodjenja, razred, odeljenje)
   VALUES ('Зденка', 'Здолшек', 'ж', '2005-08-17', 2, 1);

.. questionnote::

   Аници Павловић из IV2 уписати петицу на контролној вежби из
   математике, коју је добила 1. октобра 2020. године.

У табелу оцене треба да унесемо јединствене идентификаторе ученице и
предмета. Стога њих прво треба да прочитамо упитом ``SELECT``.


.. code-block:: sql

   SELECT id
   FROM ucenik
   WHERE ime = 'Аница' AND prezime = 'Павловић' AND razred = 4 AND odeljenje = 2;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id"
   :align: left

   "293"

.. code-block:: sql

   SELECT id
   FROM predmet
   WHERE naziv = 'Математика' AND razred = 4;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id"
   :align: left

   "9"

Знајући вредности ових идентификатора, можемо да унесемо податке у табелу
оцена.

.. code-block:: sql

   INSERT INTO ocena (id_ucenik, id_predmet, datum, ocena, vrsta)
   VALUES (293, 9, '2020-10-01', 5, 'контролна вежба');

Вежба
.....

Покушај да наредних неколико упита напишеш самостално.

.. questionnote::

   Унети у табелу предмета предмет под називом "Социологија" који се у
   четвртом разреду предаје са 2 часа недељно.

   
.. dbpetlja:: db_upisivanje_01
   :dbfile: dnevnik.sql
   :solutionquery: INSERT INTO predmet (naziv, razred, fond) VALUES ('Социологија', 4, 2)
   :checkquery: SELECT * FROM predmet

.. questionnote::

   Уписати ученику Петру Петровићу који има идентификатор 1
   неоправдани изостанак на првом часу 10. маја 2021.

   
.. dbpetlja:: db_upisivanje_02
   :dbfile: dnevnik.sql
   :solutionquery: INSERT INTO izostanak (id_ucenik, datum, cas, status) VALUES (1, '2020-05-10', 1, 'неоправдан')
   :checkquery: SELECT * FROM izostanak
                
